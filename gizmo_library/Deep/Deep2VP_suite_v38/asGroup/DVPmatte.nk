Group {
 name DVPmatte
 tile_color 0x597fff
 label "node type : \[value node_type]\noperation : \[value matte_op]\n<font color=cyan>Deep Output</font>"
 addUserKnob {20 tab_general l General}
 addUserKnob {3 mode +INVISIBLE}
 addUserKnob {41 geo_select T geoCTRL.geo_select}
 addUserKnob {41 transform_1 l transform T geoCTRL.transform}
 addUserKnob {26 title_matte l <b>MATTE</b>}
 addUserKnob {41 mat_shape l shape t "Select the 3D shape of the matte. 3D shape can be preview under 3D view when the panel of this node is active.\n\nSphere : only support uniform falloff.\nCube : support separate 3-axis falloff.\nCylinder : only support uniform falloff." T menu01.mat_shape}
 addUserKnob {6 invert_matte l "invert matte" t "Invert the matte of the shape. Same as deepHoldout but with falloff support (soften matte)." -STARTLINE}
 addUserKnob {41 node_type l "node type" t "<b>finalize matte</b>\nPremult all the mattes in the 'DVPmatte' stack to get the final matte.\n\n<b>multi matte</b>\nKeep the matte and pass along to downstream for multi mattes purpose. It will only premult RGB for 2D preview." T menu02.node_type}
 addUserKnob {4 fmatte_options l options t "<b>premult RGBA</b>\nPremult RGBA in volumetric deep. It good to carry for deep comp in down stream. May find some edges has stronger alpha in 2D view. That is because of the samples overlap in front and back, but the data per sample are accurate.\n\n<b>black & white matte</b>\nThis will fix the samples overlap look, but not good for deep comp. Recommend convert it back to 2D and shuffle the black & white to alpha for 2D comp purpose." M {"premult RGBA ( for deep comp ) " "black & white matte ( for 2D comp ) " ""}}
 addUserKnob {26 remarks l * +HIDDEN T "first multi matte node must use 'union' operation."}
 addUserKnob {4 matte_op l operation t "a : this matte\nb : input matte\n\ndivide\ta/b\nfrom\tb-a\nin\tab\nmax\tmax(a,b)\nmin\tmin(a,b)\nminus\ta-b\nmultiply\ta*b\nout\ta(1-b)\nplus\ta+b\nstencil\tb(1-a)\nunion\ta+b-ab\nxor\ta+b-2ab" M {divide from in max min minus multiply out plus stencil union xor "" "" "" "" "" ""}}
 matte_op union
 addUserKnob {26 spacer03 l "" +STARTLINE}
 addUserKnob {22 toggle_2d_mode l "toggle 2D sample" t "When toggle to 2d mode, you can see the point named 'sample_point' in viewer. Move it to the spot for sampling and output the matte." T "thisGRP = nuke.thisGroup()\n\ndef cpmode() :\n\tthisGRP\['mode'].setValue(1)\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['sample_2d_status'].setValue('<font color=cyan>\[ ON ]</font>')\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\n\nif thisGRP\['mode'].getValue() == 1 :\n\tthisGRP\['mode'].setValue(0)\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['sample_2d_status'].setValue('<font color=red>\[ OFF ]</font>')\n\tthisGRP\['updateUI'].setValue('')\nelse :\n\tif thisGRP\['mat_translate'].isAnimated() :\n\t\tif nuke.ask('Translate on this node has <font color=orange>expression/animated</font>.\\n\\nIf switch to colorpicker mode, animation or expression will be clear but keep the current value.\\n\\nDo you want to process?') :\n\t\t\tthisGRP\['remove_link'].execute()\n\t\t\tcpmode()\n\telse :\n\t\tcpmode()" +STARTLINE}
 addUserKnob {26 sample_2d_status l "" -STARTLINE T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {12 sample_point l "sample position" t "Select the matte spot in 2D space." +DISABLED}
 addUserKnob {41 mat_translate l translate T geoCTRL.translate}
 addUserKnob {41 file_menu l @FolderIcon T ax_data.file_menu}
 addUserKnob {41 snap_menu l @AxisIcon -STARTLINE T geoCTRL.snap_menu}
 addUserKnob {41 mat_rot_order l "rotation order" T geoCTRL.rot_order}
 addUserKnob {41 mat_rotate l rotate T geoCTRL.rotate}
 addUserKnob {41 mat_scaling l scale T geoCTRL.scaling}
 addUserKnob {41 mat_uniform_scale l "uniform scale" T geoCTRL.uniform_scale}
 addUserKnob {41 mat_skew l skew T geoCTRL.skew}
 addUserKnob {41 mat_pivot l pivot T geoCTRL.pivot}
 addUserKnob {22 set_link l "link to selected axis/geo" t "Select any 3D nodes and link the node with this button. It gives you a control in 3D for transformation." T "def getLevel() :\n    ### level define ###\n    if len(nuke.thisNode().fullName().split('.')) == 1 :\n          ggLevel = nuke.root()\n    else :\n          nodePath = nuke.thisNode().fullName().split('.')\n          nodePath.pop()\n          ggLevel = nuke.toNode('.'.join(nodePath))\n    return ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\nmainKnobs = \['mat_rot_order','mat_translate','mat_rotate','mat_scaling','mat_uniform_scale','mat_skew','mat_pivot']\n\naxWhiteList = \['Axis','Axis2','Cube','Sphere','Cylinder','Card','Card2','ReadGeo','ReadGeo2','TransformGeo']\n\ntry :\n    with root :\n        selNode = nuke.selectedNode()\n    \n    with thisGRP :\n        if axWhiteList.count(selNode.Class()) != 0 :\n            for knob in mainKnobs :\n                thisGRP\[knob].clearAnimated()\n            \n            thisGRP\[mainKnobs\[0]].setExpression( '\{0\}.rot_order'.format(selNode.name()) )\n            thisGRP\[mainKnobs\[1]].setExpression( '\{0\}.translate'.format(selNode.name()) )\n            thisGRP\[mainKnobs\[2]].setExpression( '\{0\}.rotate'.format(selNode.name()) )\n            thisGRP\[mainKnobs\[3]].setExpression( '\{0\}.scaling'.format(selNode.name()) )\n            thisGRP\[mainKnobs\[4]].setExpression( '\{0\}.uniform_scale'.format(selNode.name()) )\n            thisGRP\[mainKnobs\[5]].setExpression( '\{0\}.skew'.format(selNode.name()) )\n            thisGRP\[mainKnobs\[6]].setExpression( '\{0\}.pivot'.format(selNode.name()) )\n        else :\n            nuke.message('No support node selected.')\nexcept :\n    nuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the expression link but won't reset any data. So the transformation data still works if input doesn't contain any movement." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['mat_rot_order','mat_translate','mat_rotate','mat_scaling','mat_uniform_scale','mat_skew','mat_pivot']\n\nfor i in range (0, len(mainKnobs), 1) :\n    thisGRP\[mainKnobs\[i]].clearAnimated()"}
 addUserKnob {22 bake_link l "bake expression link" t "Baked out the existing expression link back to this node itself. After that, the linked node is not required for this node anymore. Baked value is base on the frame range in project setting of the nuke script.\n\n* Nuke 11.2 has issue with expression link on this node. It will crash your nuke in some cases, but it will be fine when re-open the nuke script. Because of this issue, recommand to bake the value." T "thisGRP = nuke.thisGroup()\n\nframeST = nuke.root().firstFrame()\nframeED = nuke.root().lastFrame()\n\nallknobs = \['mat_translate','mat_rotate','mat_scaling','mat_uniform_scale','mat_skew','mat_pivot']\nalldata = \{\}\n\nchknobs = 0\nfor knob in allknobs :\n\tif thisGRP\[knob].hasExpression() :\n\t\tchknobs = 1\n\nif chknobs :\n\tfor knob in allknobs :\n\t\tfor t in range( frameST, frameED+1, 1 ) :\n\t\t\ttry :\n\t\t\t\talldata\[knob].append( thisGRP\[knob].getValueAt(t) )\n\t\t\texcept :\n\t\t\t\talldata\[knob] = \[ thisGRP\[knob].getValueAt(t) ]\n\n\tfor knob in allknobs :\n\t\tthisGRP\[knob].clearAnimated()\n\t\tthisGRP\[knob].setAnimated()\n\n\tfor knob in allknobs :\n\t\tfor t in range( frameST, frameED+1, 1 ) :\n\t\t\tif type( alldata\[knob]\[t-frameST] ) is float :\n\t\t\t\tthisGRP\[knob].setValueAt( alldata\[knob]\[t-frameST] , t )\n\t\t\tif type( alldata\[knob]\[t-frameST] ) is list :\n\t\t\t\tfor i in range( len( alldata\[knob]\[t-frameST] ) ) :\n\t\t\t\t\tthisGRP\[knob].setValueAt( alldata\[knob]\[t-frameST]\[i] , t , i )\nelse :\n\tnuke.message('no expression link found.')" +STARTLINE}
 addUserKnob {22 copy_data l "copy from selected axis/geo" t "Select the axis/geo, then this will process 'link to selected axis/geo' and 'bake expression link' in once.\n\n* Nuke 11.2 has issue with expression link on this node. It will crash your nuke in some cases, but it will be fine when re-open the nuke script. Because of this issue, recommand to bake the value." -STARTLINE T "thisGRP = nuke.thisGroup()\nthisGRP\['set_link'].execute()\nthisGRP\['bake_link'].execute()"}
 addUserKnob {20 grp_3dpreview l "Pointcloud preview" n 1}
 grp_3dpreview 0
 addUserKnob {4 display_ptc_type l "display type" t "When you open this node's panel, you can check the pointcloud under 3D view.\n\n<b>none</b>\nwill not show the pointcloud in 3D\n\n<b>raw pointcloud</b>\nshow the pointcloud from input data, without any effects from this node\n\n<b>with matte applied</b>\nThis can show the instant result of the projection. Since it feedback in real time, it might slow down the progress in 3D space." M {"no pointcloud preview" "raw pointcloud" "with matte applied" ""}}
 display_ptc_type "raw pointcloud"
 addUserKnob {41 detail l "point detail" t "When you open this node's panel, you can check the pointcloud under 3D view.\n\nThis control the density of the pointcloud." T deepPositionToPoints.detail}
 addUserKnob {41 pointSize l "point size" t "When you open this node's panel, you can check the pointcloud under 3D view.\n\nThis control the point size of the pointcloud." T deepPositionToPoints.pointSize}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer02 l "" +STARTLINE T <br>}
 addUserKnob {26 title_falloff l <b>FALLOFF</b>}
 addUserKnob {13 cube3d_falloff l "cube3D falloff" +DISABLED}
 cube3d_falloff {1 1 1}
 addUserKnob {7 uniform_falloff l "uniform falloff" t "This is a globel falloff value. Support for any shape of matte." R 0.001 1}
 uniform_falloff 0.5
 addUserKnob {7 exp_in l "falloff in" R 0.1 10}
 exp_in 1
 addUserKnob {7 exp_out l out -STARTLINE R 0.1 10}
 exp_out 1
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l <b>Version</b> T 3.8}
 addUserKnob {26 l_DATE l "<b>Date Modified</b>" T 2020-12-17}
 addUserKnob {22 btn_CHANGELOG l <b>Changlelog</b> T "log = \"3.8<br>Deep2VPosition<br>-&nbsp;added&nbsp;metadata&nbsp;setup&nbsp;for&nbsp;DVPmatte's&nbsp;multi&nbsp;matte&nbsp;color&nbsp;fix.<br><br>DVPmatte<br>-&nbsp;removed&nbsp;2&nbsp;impractical&nbsp;operations<br>-&nbsp;removed&nbsp;falloff&nbsp;type&nbsp;selection,&nbsp;use&nbsp;exponential&nbsp;setting&nbsp;instead<br>-&nbsp;added&nbsp;metadata&nbsp;setup&nbsp;to&nbsp;fix&nbsp;multi&nbsp;mattes&nbsp;process<br><br>DVProjection<br>-&nbsp;link&nbsp;camera&nbsp;to&nbsp;use&nbsp;world&nbsp;matrix&nbsp;instead&nbsp;of&nbsp;transformation&nbsp;knobs<br>-&nbsp;removed&nbsp;scale&nbsp;and&nbsp;skew<br>-&nbsp;supported&nbsp;output&nbsp;deepNormal&nbsp;channel&nbsp;correctly&nbsp;(can&nbsp;be&nbsp;find&nbsp;on&nbsp;Misc&nbsp;tab)<br><br>DVPsetLight<br>-&nbsp;fixed&nbsp;the&nbsp;conflict&nbsp;if&nbsp;deep&nbsp;normal&nbsp;pass&nbsp;under&nbsp;deepNormal&nbsp;channel&nbsp;from&nbsp;input<br>-&nbsp;fixed&nbsp;'generated&nbsp;normal'&nbsp;with&nbsp;unpremult,&nbsp;this&nbsp;will&nbsp;fix&nbsp;the&nbsp;normal&nbsp;output&nbsp;in&nbsp;2D<br>-&nbsp;added&nbsp;input&nbsp;2D&nbsp;normal&nbsp;with&nbsp;unpremult,&nbsp;this&nbsp;will&nbsp;fix&nbsp;the&nbsp;normal&nbsp;output&nbsp;in&nbsp;2D<br>-&nbsp;input&nbsp;deep&nbsp;normal&nbsp;channel&nbsp;default&nbsp;changed&nbsp;to&nbsp;'deepNormal'&nbsp;<br><br>DVPrelight<br>-&nbsp;remove&nbsp;unnecessary&nbsp;knobs&nbsp;under&nbsp;different&nbsp;types&nbsp;of&nbsp;light,&nbsp;make&nbsp;interface&nbsp;clear<br>-&nbsp;point&nbsp;light&nbsp;update&nbsp;more&nbsp;accurate&nbsp;algorithm<br>-&nbsp;simplify&nbsp;falloff&nbsp;option&nbsp;on&nbsp;point&nbsp;light&nbsp;and&nbsp;spot&nbsp;light<br>-&nbsp;pointcloud&nbsp;preview&nbsp;update,&nbsp;show&nbsp;the&nbsp;input&nbsp;color<br>-&nbsp;added&nbsp;world&nbsp;scale&nbsp;unit&nbsp;under&nbsp;point&nbsp;light&nbsp;and&nbsp;spot&nbsp;light,&nbsp;this&nbsp;related&nbsp;to&nbsp;light&nbsp;intensity<br>-&nbsp;optimize&nbsp;the&nbsp;setup&nbsp;of&nbsp;point&nbsp;light.&nbsp;The&nbsp;node&nbsp;much&nbsp;lighter<br><br>DVPfresnel<br>-&nbsp;fixed&nbsp;fresnel&nbsp;output&nbsp;in&nbsp;screen&nbsp;space<br>-&nbsp;added&nbsp;unpremult&nbsp;before&nbsp;process<br>-&nbsp;replace&nbsp;gamma&nbsp;to&nbsp;exponential<br><br>DVPscene<br>-&nbsp;'mix'&nbsp;knob&nbsp;name&nbsp;changed&nbsp;to&nbsp;'light_shading'<br><br>DVPToImage<br>-&nbsp;due&nbsp;to&nbsp;DVPsetLight&nbsp;update,&nbsp;it&nbsp;output&nbsp;deepNormal&nbsp;correctly.<br>-&nbsp;added&nbsp;remove&nbsp;the&nbsp;metadata&nbsp;created&nbsp;from&nbsp;Deep2VPosition\"\nnuke.message( log )" +STARTLINE}
 addUserKnob {26 l_DEV l "<b>Developed by</b>" T "<a href='https://facebook.com/MJTLab'><font color='orange'>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  gl_color 0xff
  label "dont touch"
  note_font_size 42
  xpos -966
  ypos -601
  bdwidth 516
  bdheight 164
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x8e8e8eff
  label bin
  note_font_size 42
  xpos -965
  ypos -417
  bdwidth 516
  bdheight 291
 }
 Cylinder {
  inputs 0
  display wireframe
  selectable false
  render_mode off
  rows 1
  columns 10
  name Cylinder1
  xpos 2166
  ypos 171
 }
 Cube {
  inputs 0
  display wireframe
  selectable false
  render_mode off
  cast_shadow false
  receive_shadow false
  rows 1
  columns 1
  separate_faces false
  uniform_scale 2
  name Cube1
  xpos 2043
  ypos 177
 }
 Sphere {
  inputs 0
  display wireframe
  selectable false
  render_mode off
  cast_shadow false
  receive_shadow false
  rows 8
  columns 8
  name Sphere1
  xpos 1923
  ypos 174
 }
 Switch {
  inputs 3
  which {{mat_shape}}
  name Switch4
  xpos 2043
  ypos 247
 }
 TransformGeo {
  name geoCTRL
  xpos 2043
  ypos 327
 }
 Scene {
  name Scene1
  xpos 2053
  ypos 407
 }
push 0
 ScanlineRender {
  inputs 2
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  name ScanlineRender1
  xpos 2043
  ypos 625
 }
 Dot {
  name Dot5
  xpos 2077
  ypos 2884
 }
 Input {
  inputs 0
  name deep
  xpos 188
  ypos -608
 }
 Dot {
  name Dot1
  xpos 222
  ypos -449
 }
set N2d105000 [stack 0]
add_layer {deepRawColor deepRawColor.red deepRawColor.green deepRawColor.blue deepRawColor.alpha}
 DeepExpression {
  chans0 {deepRawColor.red deepRawColor.green deepRawColor.blue none}
  chans1 none
  deepRawColor.red "deepRawColor.red * (1/alpha)"
  deepRawColor.green "deepRawColor.green * (1/alpha)"
  deepRawColor.blue "deepRawColor.blue * (1/alpha)"
  name DeepExpression27
  xpos 315
  ypos -376
 }
push $N2d105000
 DeepExpression {
  chans0 {deepRawColor.red deepRawColor.green deepRawColor.blue none}
  chans1 none
  deepRawColor.red "red * (1/alpha)"
  deepRawColor.green "green * (1/alpha)"
  deepRawColor.blue "blue * (1/alpha)"
  name DeepExpression21
  xpos 188
  ypos -375
 }
 Switch {
  inputs 2
  which {{"\[metadata DVPmatte]+0"}}
  name Switch5
  xpos 188
  ypos -299
 }
 Dot {
  name Dot19
  xpos 222
  ypos -172
 }
set N2d104000 [stack 0]
 DeepExpression {
  chans1 none
  rgba.red alpha
  rgba.green 0
  rgba.blue 0
  rgba.alpha 1
  name DeepExpression29
  xpos 188
  ypos 66
 }
 Dot {
  name Dot9
  xpos 222
  ypos 237
 }
set N2d131800 [stack 0]
add_layer {deepPosition deepPosition.red deepPosition.green deepPosition.blue deepPosition.alpha}
 DeepExpression {
  temp_name0 circle
  temp_expr0 "sqrt( pow2( \[value store.dx] ) + pow2( \[value store.dz] ) )"
  temp_name1 height
  temp_expr1 "abs( \[value store.dy] )"
  chans0 {-deepPosition.red -deepPosition.green -deepPosition.blue deepPosition.alpha}
  chans1 none
  deepPosition.alpha "clamp( max( circle , height ) )"
  name DeepExpression20
  label "cylinder matte"
  xpos 323
  ypos 317
 }
push $N2d131800
 DeepExpression {
  temp_name0 newR
  temp_expr0 "abs( \[value store.dx] ) > 1 ? 1 : clamp( sqrt( pow2( abs( \[value store.dx] ) * \[value parent.cube3d_falloff.x]) ) )"
  temp_name1 newG
  temp_expr1 "abs( \[value store.dy] ) > 1 ? 1 : clamp( sqrt( pow2( abs( \[value store.dy] ) * \[value parent.cube3d_falloff.y]) ) )"
  temp_name2 newB
  temp_expr2 "abs( \[value store.dz] ) > 1 ? 1 : clamp( sqrt( pow2( abs( \[value store.dz] ) * \[value parent.cube3d_falloff.z]) ) )"
  chans0 {-deepPosition.red -deepPosition.green -deepPosition.blue deepPosition.alpha}
  chans1 none
  deepPosition.alpha clamp(max(abs(newR),abs(newG),abs(newB)))
  name DeepExpression18
  label "cube matte"
  xpos 188
  ypos 321
 }
push $N2d131800
 DeepExpression {
  chans0 {-deepPosition.red -deepPosition.green -deepPosition.blue deepPosition.alpha}
  chans1 none
  deepPosition.alpha "clamp( sqrt( pow2( \[value store.dx] )+pow2( \[value store.dy] )+pow2( \[value store.dz] ) ) )"
  name DeepExpression19
  label "sphere matte"
  xpos 40
  ypos 320
 }
 Switch {
  inputs 3
  which {{parent.mat_shape}}
  name Switch3
  xpos 188
  ypos 409
 }
 Dot {
  name Dot12
  xpos 222
  ypos 510
 }
set N2d130400 [stack 0]
 Dot {
  name Dot16
  xpos 307
  ypos 595
 }
 DeepExpression {
  temp_name0 invfalloff
  temp_expr0 "\[value parent.uniform_falloff] == 0 ? 1- ( (1 - deepPosition.alpha)*(1/0.00001) ) : 1- ( (1 - deepPosition.alpha)*(1/\[value parent.uniform_falloff]) )"
  chans0 {-deepPosition.red -deepPosition.green -deepPosition.blue deepPosition.alpha}
  chans1 none
  deepPosition.alpha "clamp( invfalloff )"
  name DeepExpression22
  label "global falloff (invert)"
  xpos 273
  ypos 669
 }
push $N2d130400
 DeepExpression {
  chans0 {-deepPosition.red -deepPosition.green -deepPosition.blue deepPosition.alpha}
  chans1 none
  deepPosition.alpha "1 - deepPosition.alpha"
  name DeepExpression17
  label invert
  xpos 102
  ypos 584
 }
 DeepExpression {
  temp_name0 falloff
  temp_expr0 "\[value parent.uniform_falloff] == 0 ? deepPosition.alpha*(1/0.00001) : deepPosition.alpha * (1/\[value parent.uniform_falloff])"
  chans0 {-deepPosition.red -deepPosition.green -deepPosition.blue deepPosition.alpha}
  chans1 none
  deepPosition.alpha "clamp( falloff )"
  name DeepExpression11
  label "global falloff"
  xpos 102
  ypos 678
 }
 Switch {
  inputs 2
  which {{invert_matte}}
  name Switch6
  xpos 188
  ypos 795
 }
 Dot {
  name Dot14
  xpos 222
  ypos 877
 }
 DeepExpression {
  chans0 {-deepPosition.red -deepPosition.green -deepPosition.blue deepPosition.alpha}
  chans1 none
  deepPosition.alpha "pow( 1 - pow( 1 - deepPosition.alpha , \[value parent.exp_in] ) , \[value parent.exp_out] ) * alpha"
  name DeepExpression23
  label exponential
  xpos 188
  ypos 1007
 }
 Dot {
  name Dot7
  xpos 222
  ypos 1259
 }
set N2d152400 [stack 0]
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "a + b - 2 * a * b"
  name DeepExpression16
  label xor
  xpos 793
  ypos 1394
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "\[value mdChk] ? a + b - a * b : a"
  name DeepExpression15
  label union
  xpos 663
  ypos 1398
  addUserKnob {20 User}
  addUserKnob {3 mdChk}
  mdChk {{"\[metadata DVPmatte]+0"}}
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "b * ( 1 - a )"
  name DeepExpression14
  label stencil
  xpos 534
  ypos 1398
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "a + b"
  name DeepExpression13
  label plus
  xpos 421
  ypos 1396
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "a * ( 1 - b )"
  name DeepExpression12
  label out
  xpos 304
  ypos 1401
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "a * b"
  name DeepExpression10
  label multiply
  xpos 188
  ypos 1403
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "a - b"
  name DeepExpression9
  label minus
  xpos 77
  ypos 1404
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "min( a , b )"
  name DeepExpression8
  label min
  xpos -38
  ypos 1407
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "max( a , b )"
  name DeepExpression7
  label max
  xpos -135
  ypos 1410
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "a * b"
  name DeepExpression6
  label in
  xpos -230
  ypos 1407
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "b - a"
  name DeepExpression5
  label from
  xpos -326
  ypos 1409
 }
push $N2d152400
 DeepExpression {
  temp_name0 a
  temp_expr0 deepPosition.alpha
  temp_name1 b
  temp_expr1 deepRawColor.alpha
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "a / b"
  name DeepExpression4
  label divide
  xpos -427
  ypos 1408
 }
 Switch {
  inputs 12
  which {{parent.matte_op}}
  name Switch2
  xpos 188
  ypos 1585
 }
 DeepExpression {
  chans0 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  chans1 none
  deepRawColor.alpha "clamp( deepRawColor.alpha)"
  name DeepExpression30
  xpos 188
  ypos 1686
 }
 Dot {
  name Dot35
  xpos 222
  ypos 1859
 }
set N2d1a8800 [stack 0]
 Dot {
  name Dot37
  xpos 385
  ypos 1859
 }
set N2d1a8400 [stack 0]
 DeepExpression {
  chans1 {deepRawColor.red deepRawColor.green deepRawColor.blue none}
  rgba.red "deepRawColor.red * deepRawColor.alpha * red"
  rgba.green "deepRawColor.green * deepRawColor.alpha * red"
  rgba.blue "deepRawColor.blue * deepRawColor.alpha * red"
  rgba.alpha red
  deepRawColor.red "deepRawColor.red * red"
  deepRawColor.green "deepRawColor.green * red"
  deepRawColor.blue "deepRawColor.blue * red"
  name DeepExpression2
  label "premult color\nnot alpha"
  xpos 351
  ypos 1933
 }
 ModifyMetaData {
  metadata {
   {set DVPmatte 1}
  }
  name DVPmatteMD_mult
  xpos 351
  ypos 2395
 }
 Dot {
  name Dot36
  xpos 385
  ypos 2490
 }
push $N2d1a8400
 Dot {
  name Dot2
  xpos 527
  ypos 1859
 }
 DeepExpression {
  chans1 {-deepRawColor.red -deepRawColor.green -deepRawColor.blue deepRawColor.alpha}
  rgba.red "red * deepRawColor.alpha * red"
  rgba.green "red * deepRawColor.alpha * red"
  rgba.blue "red * deepRawColor.alpha * red"
  rgba.alpha red
  deepRawColor.alpha 0
  name DeepExpression28
  label "premult black & white color\nnot alpha"
  xpos 493
  ypos 1933
 }
 Dot {
  name Dot3
  xpos 527
  ypos 2315
 }
push $N2d1a8800
 DeepExpression {
  chans1 deepRawColor
  rgba.red "deepRawColor.red * deepRawColor.alpha * red"
  rgba.green "deepRawColor.green * deepRawColor.alpha * red"
  rgba.blue "deepRawColor.blue * deepRawColor.alpha * red"
  rgba.alpha "deepRawColor.alpha * red"
  deepRawColor.red "deepRawColor.red * deepRawColor.alpha * red"
  deepRawColor.green "deepRawColor.green * deepRawColor.alpha * red"
  deepRawColor.blue "deepRawColor.blue * deepRawColor.alpha * red"
  deepRawColor.alpha "deepRawColor.alpha * red"
  name DeepExpression24
  label "premult color\nand alpha"
  xpos 188
  ypos 1926
 }
 DeepExpression {
  chans0 none
  chans1 deep
  deep.front "deepRawColor.alpha <= 0 ? -1 : deep.front"
  deep.back "deepRawColor.alpha <= 0 ? -1 : deep.back"
  name DeepExpression41
  label "alpha check"
  xpos 188
  ypos 2021
 }
 DeepCrop {
  use_znear false
  zfar 0
  outside_zrange true
  bbox {204.6000061 107.8000031 818.4000244 431.2000122}
  use_bbox false
  name DeepCrop3
  label "sample cleanup"
  xpos 188
  ypos 2115
 }
 Switch {
  inputs 2
  which {{parent.fmatte_options}}
  name Switch1
  label "finalize matte"
  xpos 188
  ypos 2305
 }
 ModifyMetaData {
  metadata {
   {set DVPmatte 0}
  }
  name DVPmatteMD_fin
  xpos 188
  ypos 2399
 }
 Switch {
  inputs 2
  which {{parent.node_type}}
  name Switch14
  label "node type"
  xpos 188
  ypos 2481
 }
 DeepExpression {
  chans1 deep
  name DeepExpression26
  xpos 188
  ypos 2575
  addUserKnob {20 User}
  addUserKnob {3 md_check}
  md_check {{"\[metadata DVPmatte]"}}
 }
 DeepExpression {
  chans0 {-deepPosition.red -deepPosition.green -deepPosition.blue deepPosition.alpha}
  chans1 none
  deepPosition.alpha 0
  name DeepExpression32
  label reset
  xpos 188
  ypos 2676
 }
 Dot {
  name Dot11
  xpos 222
  ypos 2796
 }
set N2d212800 [stack 0]
 Switch {
  inputs 2
  name preview_3D
  xpos 188
  ypos 3356
 }
 Output {
  name Output1
  xpos 188
  ypos 3481
 }
push $N2d212800
push $N2d104000
 Dot {
  name Dot10
  xpos 1530
  ypos -172
 }
set N2d237c00 [stack 0]
 Switch {
  inputs 2
  which {{"parent.display_ptc_type == 1 ? 0 : parent.display_ptc_type == 2 ? 1 : 0"}}
  name Switch8
  xpos 1496
  ypos 2793
 }
 Group {
  name DeepPositionToImage3
  tile_color 0x3d99ff
  label "<font color=cyan>Image Output</font>"
  xpos 1496
  ypos 2873
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l <b>Version</b> T n/a}
  addUserKnob {26 l_DATE l "<b>Date Modified</b>" T 2019-05-23}
  addUserKnob {26 l_CHANGELOG l <b>Changelog</b> T "for internal use"}
  addUserKnob {26 l_DEV l "<b>Developed by</b>" T "<a href='https://facebook.com/MJTLab'><font color='orange'>Mark Joey Tang</font></a>"}
 }
  Input {
   inputs 0
   name deep
   xpos 508
   ypos -26
  }
  Dot {
   name Dot5
   xpos 542
   ypos 31
  }
set N2d237000 [stack 0]
  DeepExpression {
   chans1 none
   rgba.red deepPosition.red
   rgba.green deepPosition.green
   rgba.blue deepPosition.blue
   rgba.alpha "alpha == 0 ? 0 : 1"
   name DeepExpression15
   xpos 656
   ypos 28
  }
  DeepToImage {
   name DeepToImage2
   xpos 656
   ypos 185
  }
push $N2d237000
  DeepToImage {
   name DeepToImage1
   xpos 508
   ypos 80
  }
  ShuffleCopy {
   inputs 2
   red red
   green green
   blue blue
   alpha black
   out deepPosition
   name ShuffleCopy1
   xpos 508
   ypos 185
  }
  Remove {
   channels deepRawColor
   name Remove1
   xpos 508
   ypos 265
  }
  Output {
   name Output1
   xpos 508
   ypos 353
  }
 end_group
 PositionToPoints2 {
  display textured
  render_mode off
  cast_shadow false
  receive_shadow false
  P_channel deepPosition
  detail 0.1
  name deepPositionToPoints
  xpos 1496
  ypos 2971
  disable {{"parent.display_ptc_type == 0 ? 1 : 0"}}
 }
push $N2d237c00
 Dot {
  name Dot8
  xpos 1722
  ypos -172
 }
 Group {
  name DeepPositionToImage1
  tile_color 0x3d99ff
  label "<font color=cyan>Image Output</font>"
  xpos 1688
  ypos -93
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l <b>Version</b> T n/a}
  addUserKnob {26 l_DATE l "<b>Date Modified</b>" T 2019-05-23}
  addUserKnob {26 l_CHANGELOG l <b>Changelog</b> T "for internal use"}
  addUserKnob {26 l_DEV l "<b>Developed by</b>" T "<a href='https://facebook.com/MJTLab'><font color='orange'>Mark Joey Tang</font></a>"}
 }
  Input {
   inputs 0
   name deep
   xpos 508
   ypos -26
  }
  Dot {
   name Dot5
   xpos 542
   ypos 31
  }
set N2d25e800 [stack 0]
  DeepExpression {
   chans1 none
   rgba.red deepPosition.red
   rgba.green deepPosition.green
   rgba.blue deepPosition.blue
   rgba.alpha "alpha == 0 ? 0 : 1"
   name DeepExpression15
   xpos 656
   ypos 28
  }
  DeepToImage {
   name DeepToImage2
   xpos 656
   ypos 185
  }
push $N2d25e800
  DeepToImage {
   name DeepToImage1
   xpos 508
   ypos 80
  }
  ShuffleCopy {
   inputs 2
   red red
   green green
   blue blue
   alpha black
   out deepPosition
   name ShuffleCopy1
   xpos 508
   ypos 185
  }
  Remove {
   channels deepRawColor
   name Remove1
   xpos 508
   ypos 265
  }
  Output {
   name Output1
   xpos 508
   ypos 353
  }
 end_group
 Shuffle {
  in deepPosition
  alpha white
  name sample_node
  xpos 1688
  ypos 5
 }
 NoOp {
  inputs 0
  name menu02
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['node_type'].getValue() :\n    thisGRP\['fmatte_options'].setVisible( False )\n    thisGRP\['remarks'].setVisible( True )\nelse :\n    thisGRP\['fmatte_options'].setVisible( True )\n    thisGRP\['remarks'].setVisible( False )\n"
  xpos -668
  ypos -519
  addUserKnob {20 User}
  addUserKnob {4 node_type l "node type" M {"finalize matte" "multi mattes" "" "" ""}}
 }
 NoOp {
  inputs 0
  name menu01
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['mat_shape'].getValue() == 1 :\n    thisGRP\['cube3d_falloff'].setEnabled(True)\nelse :\n    thisGRP\['cube3d_falloff'].setEnabled(False)\n"
  xpos -784
  ypos -519
  addUserKnob {20 User}
  addUserKnob {4 mat_shape l shape M {Sphere Cube Cylinder ""}}
 }
 NoOp {
  inputs 0
  name store
  xpos -866
  ypos -248
  addUserKnob {20 User}
  addUserKnob {22 fn T "def sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['mode'].getValue() == 1 :\n\t\tsampt = thisGRP\['sample_point'].getValue()\n\t\tsamNode = nuke.toNode('sample_node')\n\t\tdata = \[samNode.sample('red', sampt\[0], sampt\[1]), samNode.sample('green', sampt\[0], sampt\[1]), samNode.sample('blue', sampt\[0], sampt\[1])]\n\t\tthisGRP\['mat_translate'].setValue(data)" +STARTLINE}
  addUserKnob {1 dx}
  dx "( deepPosition.red - \[value ax_data.world_matrix.3] ) * \[value inverseMatrix.invMatrix.0] + ( deepPosition.green - \[value ax_data.world_matrix.7] ) * \[value inverseMatrix.invMatrix.1] + ( deepPosition.blue - \[value ax_data.world_matrix.11] ) * \[value inverseMatrix.invMatrix.2]"
  addUserKnob {1 dy}
  dy "( deepPosition.red - \[value ax_data.world_matrix.3] ) * \[value inverseMatrix.invMatrix.3] + ( deepPosition.green - \[value ax_data.world_matrix.7] ) * \[value inverseMatrix.invMatrix.4] + ( deepPosition.blue - \[value ax_data.world_matrix.11] ) * \[value inverseMatrix.invMatrix.5]"
  addUserKnob {1 dz}
  dz "( deepPosition.red - \[value ax_data.world_matrix.3] ) * \[value inverseMatrix.invMatrix.6] + ( deepPosition.green - \[value ax_data.world_matrix.7] ) * \[value inverseMatrix.invMatrix.7] + ( deepPosition.blue - \[value ax_data.world_matrix.11] ) * \[value inverseMatrix.invMatrix.8]"
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos -643
  ypos -252
  addUserKnob {20 User}
  addUserKnob {1 knob_path}
  knob_path ax_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Axis {
  inputs 0
  display off
  rot_order {{parent.mat_rot_order}}
  translate {{parent.mat_translate} {parent.mat_translate} {parent.mat_translate}}
  rotate {{parent.mat_rotate} {parent.mat_rotate} {parent.mat_rotate}}
  scaling {{parent.mat_scaling} {parent.mat_scaling} {parent.mat_scaling}}
  uniform_scale {{parent.mat_uniform_scale}}
  skew {{parent.mat_skew} {parent.mat_skew} {parent.mat_skew}}
  pivot {{parent.mat_pivot} {parent.mat_pivot} {parent.mat_pivot}}
  name ax_data
  xpos -632
  ypos -345
 }
end_group
