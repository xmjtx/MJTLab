Gizmo {
 name Ncam2Nscr
 onCreate "\nthisGRP = nuke.thisGroup()\nif not thisGRP\['disable_error'].getValue() :\n    import os\n    import re\n\n    fontpath = re.split( '/|\"\"' , nuke.EXE_PATH )\n    fontpath.pop()\n    fontpath += \['plugins','fonts']\n    \n    if os.path.isfile( '/'.join( fontpath + \['UtopiaBold.pfa'] ) ) :\n        thisGRP\['font'].setValue( '/'.join( fontpath + \['UtopiaBold.pfa'] ) )\n    elif os.path.isfile( '/'.join( fontpath + \['CourierBold.pfa'] ) ) :\n        thisGRP\['font'].setValue( '/'.join( fontpath + \['CourierBold.pfa'] ) )\n    elif os.path.isfile( '/'.join( fontpath + \['Courier10PitchBold.pfb'] ) ) :\n        thisGRP\['font'].setValue( '/'.join( fontpath + \['Courier10PitchBold.pfb'] ) )\n    else :\n        thisGRP\['font'].setValue( '/'.join( fontpath + \['BitstreamCharterBold.pfb'] ) )\n"
 tile_color 0x7f0072ff
 addUserKnob {20 general l General}
 addUserKnob {4 output l <b>OUTPUT</b> M {"normal screen space" fresnel ""}}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {20 CamTabBegin l "" +STARTLINE n -2}
 addUserKnob {20 tab_cam_setup l "Camera Setup"}
 addUserKnob {22 set_link l "link to selected camera" t "Deep data is related to camera. So when convert deep data to anything, it required the camera data.\n\nhow to use :\nSelect the camera, which can be link to any axis nodes. This tool will get the focal, haperture and world matrix from selected camera to generate world space position data.\n\nYou can find the world space position pass store under <b>'deepPosition'</b> channel after this node. The pass support volumatric deep data. If want to bring the position data to 2D in downstream. Please only use <b>DVPToImage</b> which comes along with this toolset.\n\nAdditional note:\nThis node will also create another channel called <b>'deepRawColor'</b> . This channel stored the original of deep data from input for any dev purposes in downstream. User not necessary to use this channel but better to keep it if this toolset occur in downstream." T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll','world_matrix']\ndefaultKnobs = \{\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll',\n\t\t\t'world matrix' : 'world_matrix'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tfor knob in mainKnobs :\n\t\t\t\tthisGRP\[knob].clearAnimated()\n\t\t\t\t\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.winroll'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tfor knob in mainKnobs :\n\t\t\t\t\tthisGRP\[knob].clearAnimated()\n\t\t\t\t\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data. So the position data still works if input doesn't contain any camera movement." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll','world_matrix']\n\nfor knob in thisGRP.knobs() :\n    if mainKnobs.count(knob) != 0 :\n        thisGRP\[knob].clearAnimated()"}
 addUserKnob {22 bake_link l "bake expression link" t "Baked out the existing expression link back to this node itself. After that, camera node is not required for this node anymore. Baked value is base on the frame range in project setting of the nuke script.\n\n* Nuke 11.2 has issue with expression link on this node. It will crash your nuke in some cases, but it will be fine when re-open the nuke script. Because of this issue, recommand to bake the value." T "thisGRP = nuke.thisGroup()\n\nframeST = nuke.root().firstFrame()\nframeED = nuke.root().lastFrame()\n\nallknobs = \['cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll','world_matrix']\nalldata = \{\}\n\nchknobs = 0\nfor knob in allknobs :\n\tif thisGRP\[knob].hasExpression() :\n\t\tchknobs = 1\n\nif chknobs :\n\tfor knob in allknobs :\n\t\tfor t in range( frameST, frameED+1, 1 ) :\n\t\t\ttry :\n\t\t\t\talldata\[knob].append( thisGRP\[knob].getValueAt(t) )\n\t\t\texcept :\n\t\t\t\talldata\[knob] = \[ thisGRP\[knob].getValueAt(t) ]\n\n\tfor knob in allknobs :\n\t\tthisGRP\[knob].clearAnimated()\n\t\tthisGRP\[knob].setAnimated()\n\n\tfor knob in allknobs :\n\t\tfor t in range( frameST, frameED+1, 1 ) :\n\t\t\tif type( alldata\[knob]\[t-frameST] ) is float :\n\t\t\t\tthisGRP\[knob].setValueAt( alldata\[knob]\[t-frameST] , t )\n\t\t\tif type( alldata\[knob]\[t-frameST] ) is list :\n\t\t\t\tfor i in range( len( alldata\[knob]\[t-frameST] ) ) :\n\t\t\t\t\tthisGRP\[knob].setValueAt( alldata\[knob]\[t-frameST]\[i] , t , i )\nelse :\n\tnuke.message('no expression link found.')" +STARTLINE}
 addUserKnob {22 copy_data l "copy from selected camera" t "Select the camera, then this will process 'link to selected camera' and 'bake expression link' in once.\n\n* Nuke 11.2 has issue with expression link on this node. It will crash your nuke in some cases, but it will be fine when re-open the nuke script. Because of this issue, recommand to bake the value." -STARTLINE T "thisGRP = nuke.thisGroup()\nthisGRP\['set_link'].execute()\nthisGRP\['bake_link'].execute()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal 50
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture 24.576
 addUserKnob {30 cam_win_translate l "window translate"}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {1 1}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 CamTabEnd l "" +STARTLINE n -3}
 addUserKnob {20 tab_misc l Misc}
 addUserKnob {2 font}
 font "C:/Program Files/Nuke12.2v3/plugins/fonts/UtopiaBold.pfa"
 addUserKnob {6 disable_error l "disable onscreen message" +STARTLINE}
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.5}
 addUserKnob {26 l_DATE l "Date Modified" T 2020-11-25}
 addUserKnob {22 btn_CHANGELOG l Changelog T "log = \"1.5<br>global&nbsp;update&nbsp;:<br>-&nbsp;error&nbsp;detect&nbsp;flip&nbsp;update<br>-&nbsp;bring&nbsp;back&nbsp;alpha&nbsp;to&nbsp;downstream<br>ConvertPNZ&nbsp;:<br>-&nbsp;Normal&nbsp;conversion&nbsp;removed&nbsp;'fresnel'<br>P2Z&nbsp;:<br>-&nbsp;added&nbsp;label&nbsp;of&nbsp;1/z<br>&nbsp;&nbsp;so&nbsp;it&nbsp;easier&nbsp;to&nbsp;read&nbsp;under&nbsp;DAG<br>Added&nbsp;new&nbsp;node&nbsp;-&nbsp;Ncam2Nscr&nbsp;:<br>-&nbsp;convert&nbsp;Normal&nbsp;in&nbsp;camera&nbsp;space&nbsp;to&nbsp;screen&nbsp;space<br>-&nbsp;fresnel&nbsp;moved&nbsp;under&nbsp;this&nbsp;node<br><br>1.4<br>-&nbsp;a&nbsp;package&nbsp;convert&nbsp;3D&nbsp;tech&nbsp;passes<br>&nbsp;&nbsp;included<br>&nbsp;&nbsp;*&nbsp;P2Z&nbsp;(&nbsp;Position&nbsp;To&nbsp;Depth&nbsp;)<br>&nbsp;&nbsp;*&nbsp;P2N&nbsp;(&nbsp;Position&nbsp;To&nbsp;Normal&nbsp;)<br>&nbsp;&nbsp;*&nbsp;Z2P&nbsp;(&nbsp;Depth&nbsp;To&nbsp;Position&nbsp;)<br>&nbsp;&nbsp;*&nbsp;Z2N&nbsp;(&nbsp;Depth&nbsp;To&nbsp;Normal&nbsp;)<br>&nbsp;&nbsp;*&nbsp;ConvertPNZ&nbsp;(&nbsp;self&nbsp;convertion&nbsp;)<br>-&nbsp;fixed&nbsp;camera&nbsp;window&nbsp;transformation&nbsp;issue\"\nnuke.message( log )" +STARTLINE}
 addUserKnob {26 l_DEV l "Developed by" T "<a href='https://facebook.com/MJTLab'><font color='orange'>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "dont touch"
  note_font_size 42
  xpos -158
  ypos -449
  bdwidth 274
  bdheight 144
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x388e8e00
  label bin
  note_font_size 42
  xpos -153
  ypos -270
  bdwidth 272
  bdheight 503
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos -111
  ypos 68
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path fb_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Axis {
  inputs 0
  display off
  selectable false
  rotate {0 0 {parent.cam_winroll}}
  name fb_data
  xpos -97
  ypos -47
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  name cam_data
  xpos 6
  ypos -48
 }
 NoOp {
  inputs 0
  name global
  xpos -114
  ypos -148
  addUserKnob {20 User}
  addUserKnob {12 res}
  res {{"\[exists parent.input0] ? parent.input0.width : width"} {"\[exists parent.input0] ? parent.input0.height : height"}}
  addUserKnob {7 pxa}
  pxa {{"\[exists parent.input0] ? parent.input0.pixel_aspect : pixel_aspect"}}
  addUserKnob {7 hratio}
  hratio {{"parent.cam_haperture / parent.cam_focal"}}
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{global.res.x}}
  box_height {{global.res.y}}
  box_fixed true
  box_pixel_aspect {{global.pxa}}
  name Reformat3
  xpos 1177
  ypos 738
 }
 Text {
  message "\nmissing depth pass"
  font "\[value parent.font]"
  size {{global.res.x/15}}
  xjustify center
  yjustify center
  Transform 1
  box {0 0 {global.res.x} {global.res.y}}
  center {640 360}
  name Text2
  xpos 1177
  ypos 887
  disable {{parent.disable_error}}
 }
 Reformat {
  type "to box"
  box_width {{global.res.x}}
  box_height {{global.res.y}}
  box_fixed true
  box_pixel_aspect {{global.pxa}}
  black_outside true
  name Reformat4
  xpos 1177
  ypos 967
 }
 Dot {
  name Dot2
  xpos 1211
  ypos 1134
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{global.res.x}}
  box_height {{global.res.y}}
  box_fixed true
  box_pixel_aspect {{global.pxa}}
  name Reformat1
  xpos 955
  ypos 744
 }
 Dot {
  name Dot4
  xpos 989
  ypos 824
 }
set N20942800 [stack 0]
 Text {
  message "missing Ncam pass\n"
  font "\[value parent.font]"
  size {{global.res.x/15}}
  xjustify center
  yjustify center
  Transform 1
  box {0 0 {global.res.x} {global.res.y}}
  center {640 360}
  name Text1
  xpos 955
  ypos 880
  disable {{parent.disable_error}}
 }
 Reformat {
  type "to box"
  box_width {{global.res.x}}
  box_height {{global.res.y}}
  box_fixed true
  box_pixel_aspect {{global.pxa}}
  black_outside true
  name Reformat2
  xpos 955
  ypos 962
 }
 Dot {
  name Dot5
  xpos 989
  ypos 1042
 }
push $N20942800
 Shuffle {
  red black
  green black
  blue black
  alpha white
  name Shuffle2
  xpos 696
  ypos 821
 }
 Input {
  inputs 0
  name Ncam
  xpos 404
  ypos -536
 }
 Dot {
  name Dot12
  xpos 438
  ypos -339
 }
set Nf022c00 [stack 0]
 Dot {
  name Dot13
  xpos 261
  ypos -339
 }
 Dot {
  name Dot11
  xpos 261
  ypos 513
 }
 Input {
  inputs 0
  name depth
  xpos 624
  ypos -537
  number 1
 }
 Dot {
  name Dot1
  xpos 658
  ypos -180
 }
push $Nf022c00
 ShuffleCopy {
  inputs 2
  in rgb
  red red
  green red
  blue red
  alpha black
  out depth
  name ShuffleCopy1
  xpos 404
  ypos -183
 }
 Expression {
  temp_name0 uMult
  temp_expr0 "abs( (x+0.5)/input.width-0.5 ) *2"
  temp_name1 vMult
  temp_expr1 "abs( (y+0.5)/input.height-0.5 ) *2"
  temp_name2 hHalfAOV
  temp_expr2 "degrees( atan( ( ( \[value haperture] / \[value focal] ) * abs( \[value depthChannel] ) /2 ) / abs( \[value depthChannel] ) ) )"
  temp_name3 vHalfAOV
  temp_expr3 "degrees( atan( ( ( \[value haperture] / \[value focal] ) * (input.height/input.width) * abs( \[value depthChannel] ) /2 ) / abs( \[value depthChannel] ) ) )"
  expr0 "alpha<=0 ? 0 : x < input.width/2 ? r*cos(radians(-hHalfAOV*uMult)) + b*sin(radians(-hHalfAOV*uMult)) : r*cos(radians(hHalfAOV*uMult)) + b*sin(radians(hHalfAOV*uMult))"
  expr1 "alpha<=0 ? 0 : y > input.height/2 ? g*cos(radians(vHalfAOV*vMult )) + b*sin(radians(vHalfAOV*vMult)) : g*cos(radians(-vHalfAOV*vMult )) + b*sin(radians(-vHalfAOV*vMult))"
  expr2 "alpha<=0 ? 0 : x < input.width/2 && y < input.height/2 ? \nr*-cos(radians(vHalfAOV*vMult))*sin(radians(-hHalfAOV*uMult)) + g*sin(radians(vHalfAOV*vMult)) + b*cos(radians(vHalfAOV*vMult))*cos(radians(-hHalfAOV*uMult)) : x > input.width/2 && y > input.height/2 ? r*-cos(radians(-vHalfAOV*vMult))*sin(radians(hHalfAOV*uMult)) + g*sin(radians(-vHalfAOV*vMult)) + b*cos(radians(-vHalfAOV*vMult))*cos(radians(hHalfAOV*uMult)) : x < input.width/2 && y > input.height/2 ? r*-cos(radians(-vHalfAOV*vMult))*sin(radians(-hHalfAOV*uMult)) + g*sin(radians(-vHalfAOV*vMult)) + b*cos(radians(-vHalfAOV*vMult))*cos(radians(-hHalfAOV*uMult)) : r*-cos(radians(vHalfAOV*vMult))*sin(radians(hHalfAOV*uMult)) + g*sin(radians(vHalfAOV*vMult)) + b*cos(radians(vHalfAOV*vMult))*cos(radians(hHalfAOV*uMult))"
  name Ncam2Nscr
  xpos 404
  ypos -76
  addUserKnob {20 User}
  addUserKnob {7 focal}
  focal {{parent.cam_focal}}
  addUserKnob {7 haperture}
  haperture {{parent.cam_haperture}}
  addUserKnob {1 depthChannel}
  depthChannel depth.Z
 }
 Dot {
  name Dot3
  xpos 438
  ypos 40
 }
set N1a50f000 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha black
  name Shuffle1
  xpos 567
  ypos 37
 }
 Invert {
  channels rgb
  name Invert1
  xpos 567
  ypos 117
 }
push $N1a50f000
 Switch {
  inputs 2
  which {{parent.output}}
  name Switch1
  xpos 404
  ypos 241
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 404
  ypos 504
  disable {{"!\[exists parent.input0]"}}
 }
 Premult {
  name Premult1
  xpos 404
  ypos 627
  disable {{!parent.output}}
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input0] + !\[exists parent.input1]"}}
  name Switch2
  xpos 404
  ypos 821
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 404
  ypos 1039
  disable {{"\[exists parent.input0]"}}
 }
 Merge2 {
  inputs 2
  name Merge2
  xpos 404
  ypos 1131
  disable {{"\[exists parent.input1]"}}
 }
 Output {
  name Output1
  xpos 404
  ypos 1303
 }
end_group
